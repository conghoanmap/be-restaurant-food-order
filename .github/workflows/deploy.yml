name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-project:
    name: Build Project
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: restaurantfoodorder
          MYSQL_USER: app_user
          MYSQL_PASSWORD: app_user
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -p123456"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:8.0
        ports:
          - 6379:6379

    steps:
      # Lấy mã nguồn từ kho lưu trữ
      - name: Checkout code
        uses: actions/checkout@v3
        # Thiết lập JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin" # OpenJDK phổ biến từ Eclipse Temurin
          java-version: "17" # Phiên bản JDK
        # Xác nhận JDK đã được cài đặt
      - name: Verify JDK installation
        run: java -version
        # Xây dựng dự án với Maven
      - name: Build with Maven
        run: mvn clean install
        # Lưu trữ các gói Maven để tăng tốc độ xây dựng trong tương lai
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  deploy-to-docker-hub:
    name: Deploy to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_IMAGE }}:${{ secrets.DOCKER_HUB_IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_IMAGE }}:${{ secrets.DOCKER_HUB_IMAGE_TAG }}
